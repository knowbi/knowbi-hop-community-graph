<?xml version="1.0" encoding="UTF-8"?>
<pipeline>
  <info>
    <name>pl_mattermost_jira_relations</name>
    <name_sync_with_filename>Y</name_sync_with_filename>
    <description/>
    <extended_description/>
    <pipeline_version/>
    <pipeline_type>Normal</pipeline_type>
    <parameters>
    </parameters>
    <capture_transform_performance>N</capture_transform_performance>
    <transform_performance_capturing_delay>1000</transform_performance_capturing_delay>
    <transform_performance_capturing_size_limit>100</transform_performance_capturing_size_limit>
    <created_user>-</created_user>
    <created_date>2020/11/29 14:31:53.882</created_date>
    <modified_user>-</modified_user>
    <modified_date>2020/11/29 14:31:53.882</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>get posts, issues</from>
      <to>:POST_HAS_ISSUE</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <transform>
    <name>:POST_HAS_ISSUE</name>
    <type>Neo4JOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>lineage-graph</connection>
    <batch_size>1000</batch_size>
    <key/>
    <create_indexes>N</create_indexes>
    <use_create>N</use_create>
    <only_create_relationships>Y</only_create_relationships>
    <returning_graph>N</returning_graph>
    <return_graph_field>graph</return_graph_field>
    <from>
      <read_only_from_node>N</read_only_from_node>
      <labels>
        <label/>
        <value>Post</value>
      </labels>
      <properties>
        <property>
          <name>id</name>
          <value>n.id</value>
          <type>String</type>
          <primary>Y</primary>
        </property>
      </properties>
    </from>
    <to>
      <read_only_to_node>N</read_only_to_node>
      <labels>
        <label/>
        <value>Issue</value>
      </labels>
      <properties>
        <property>
          <name>key</name>
          <value>i.key</value>
          <type>String</type>
          <primary>Y</primary>
        </property>
      </properties>
    </to>
    <relationship/>
    <relationship_value>POST_HAS_ISSUE</relationship_value>
    <relprops/>
    <attributes/>
    <GUI>
      <xloc>336</xloc>
      <yloc>144</yloc>
    </GUI>
  </transform>
  <transform>
    <name>get posts, issues</name>
    <type>Neo4jCypherOutput</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <connection>lineage-graph</connection>
    <cypher>match(n:Post) match (i:Issue) where n.message contains i.key return n.id, i.key; </cypher>
    <batch_size/>
    <read_only>N</read_only>
    <retry>Y</retry>
    <cypher_from_field>N</cypher_from_field>
    <cypher_field/>
    <unwind>N</unwind>
    <unwind_map/>
    <returning_graph>N</returning_graph>
    <return_graph_field/>
    <mappings/>
    <returns>
      <return>
        <name>n.id</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
      <return>
        <name>i.key</name>
        <type>String</type>
        <source_type>String</source_type>
      </return>
    </returns>
    <attributes/>
    <GUI>
      <xloc>161</xloc>
      <yloc>144</yloc>
    </GUI>
  </transform>
  <transform_error_handling>
  </transform_error_handling>
  <attributes/>
</pipeline>
